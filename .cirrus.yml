---
# Cirrus CI configuration for testing MacbookSetup on Apple Silicon macOS

# Environment variables for the entire workflow
env:
  # Set non-interactive mode for Homebrew to avoid prompts
  HOMEBREW_NO_AUTO_UPDATE: 1
  HOMEBREW_NO_INSTALL_CLEANUP: 1
  HOMEBREW_NO_ENV_HINTS: 1
  # Avoid prompts during script execution
  CI: true
  NONINTERACTIVE: 1
  # Ensure proper PATH for commands
  PATH: /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$PATH

# Daily scheduled validation build
daily_validation_task:
  name: daily_compatibility_check
  trigger_type: scheduled
  cron: "0 0 * * *"  # Run at midnight UTC every day
  
  # Use macOS Ventura on Apple Silicon
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-base:latest
    cpu: 4
    memory: 8G
  
  # Set a timeout for the entire task (3 hours)
  timeout_in: 180m
  
  # Clone the repository
  clone_script:
    - git clone $CIRRUS_REPO_CLONE_URL .
  
  # Validate shell scripts with ShellCheck
  shellcheck_script:
    - |
      # Install Homebrew if needed
      if ! command -v brew &>/dev/null; then
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        [[ "$(uname -m)" == "arm64" ]] && eval "$(/opt/homebrew/bin/brew shellenv)"
      fi
      
      # Install ShellCheck
      brew install shellcheck
      
      # Validate shell scripts
      shellcheck -s bash ci_modifiers.sh
      shellcheck -s bash setup.sh
      shellcheck -s bash verify_setup.sh.template
  
  # Generate CI setup script by patching the original setup.sh
  prepare_script:
    - |
      # Ensure script is executable
      chmod +x ci_modifiers.sh
      
      # Run the CI modifiers script directly in zsh
      # This generates ci_setup.sh without needing to source functions
      zsh ./ci_modifiers.sh
      
      # Verify the script was created successfully
      if [[ ! -f ci_setup.sh ]]; then
        echo "Failed to generate ci_setup.sh"
        exit 1
      fi
      
      # Make the generated script executable
      chmod +x ci_setup.sh
      
      # Validate the generated ci_setup.sh script
      echo "Validating generated ci_setup.sh script..."
      shellcheck -s bash ci_setup.sh
      echo "ci_setup.sh validation complete."
  
  # Create a test script to verify installations
  create_test_script:
    - cp verify_setup.sh.template verify_setup.sh
    - chmod +x verify_setup.sh
  
  # Run the actual setup
  setup_script:
    - zsh ./ci_setup.sh

  # Verify the installation
  verify_script:
    - zsh ./verify_setup.sh
  
  # Always collect logs for debugging
  always:
    logs_artifacts:
      path: "*.log"
      type: text/plain

# Task for testing the setup script on macOS ARM
macos_arm_test_task:
  # Use macOS Ventura on Apple Silicon
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-base:latest
    cpu: 4
    memory: 8G
  
  # Set a timeout for the entire task (3 hours)
  timeout_in: 180m
  
  # Clone the repository
  clone_script:
    - git clone $CIRRUS_REPO_CLONE_URL .
  
  # Validate shell scripts with ShellCheck
  shellcheck_script:
    - |
      # Install Homebrew if needed
      if ! command -v brew &>/dev/null; then
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        [[ "$(uname -m)" == "arm64" ]] && eval "$(/opt/homebrew/bin/brew shellenv)"
      fi
      
      # Install ShellCheck
      brew install shellcheck
      
      # Validate shell scripts
      shellcheck -s bash ci_modifiers.sh
      shellcheck -s bash setup.sh
      shellcheck -s bash verify_setup.sh.template
  
  # Generate CI setup script by patching the original setup.sh
  prepare_script:
    - |
      # Ensure script is executable
      chmod +x ci_modifiers.sh
      
      # Run the CI modifiers script directly in zsh
      zsh ./ci_modifiers.sh
      
      # Verify the script was created successfully
      if [[ ! -f ci_setup.sh ]]; then
        echo "Failed to generate ci_setup.sh"
        exit 1
      fi
      
      # Make the generated script executable
      chmod +x ci_setup.sh
      
      # Validate the generated ci_setup.sh script
      echo "Validating generated ci_setup.sh script..."
      shellcheck -s bash ci_setup.sh
      echo "ci_setup.sh validation complete."
  
  # Create a test script to verify installations
  create_test_script:
    - cp verify_setup.sh.template verify_setup.sh
    - chmod +x verify_setup.sh
  
  # Run the actual setup
  setup_script:
    - zsh ./ci_setup.sh

  # Verify the installation
  verify_script:
    - zsh ./verify_setup.sh
  
  # Always collect logs for debugging
  always:
    logs_artifacts:
      path: "*.log"
      type: text/plain
