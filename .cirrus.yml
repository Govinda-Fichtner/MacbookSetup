---
# Cirrus CI configuration for testing MacbookSetup on Apple Silicon macOS

# Environment variables for the entire workflow
env:
  # Set non-interactive mode for Homebrew to avoid prompts
  HOMEBREW_NO_AUTO_UPDATE: 1
  HOMEBREW_NO_INSTALL_CLEANUP: 1
  HOMEBREW_NO_ENV_HINTS: 1
  # Avoid prompts during script execution
  CI: true
  NONINTERACTIVE: 1
  # Ensure proper PATH for commands
  PATH: /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$PATH
  # Shell configuration
  SHELL: /bin/zsh
  ZDOTDIR: $HOME

# Template for macOS instance configuration
.macos_instance_template: &macos_instance_template
  macos_instance:
    image: ghcr.io/cirruslabs/macos-sonoma-base:latest
    cpu: 4
    memory: 8G

  # Set a timeout for the entire task (3 hours)
  timeout_in: 180m

# Template for repository cloning
.clone_template: &clone_template
  clone_script:
    - git clone $CIRRUS_REPO_CLONE_URL .

# Template for installing Homebrew
.install_homebrew_template: &install_homebrew_template
  install_homebrew_script:
    - |
      if ! command -v brew &>/dev/null; then
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        [[ "$(uname -m)" == "arm64" ]] && eval "$(/opt/homebrew/bin/brew shellenv)"
      fi

# Template for preparing environment
.prepare_environment_template: &prepare_environment_template
  prepare_environment_script:
    - |
      # Install required tools
      brew install shellcheck

      # Set up environment variables consistently
      export ZDOTDIR="${HOME}"
      export ANTIDOTE_HOME="${HOME}/.antidote"

      # Create necessary directories
      mkdir -p "${ZDOTDIR}"
      mkdir -p "${ANTIDOTE_HOME}"

      # Create .zsh_plugins.txt in the correct location
      if [[ ! -f "${ZDOTDIR}/.zsh_plugins.txt" ]]; then
        echo "Creating .zsh_plugins.txt in ${ZDOTDIR}"
        {
          echo "# Core functionality"
          echo "zsh-users/zsh-completions"
          echo "zsh-users/zsh-autosuggestions"
          echo "zsh-users/zsh-syntax-highlighting"
          echo ""
          echo "# Git integration"
          echo "ohmyzsh/ohmyzsh path:plugins/git"
          echo ""
          echo "# Kubernetes tools"
          echo "ohmyzsh/ohmyzsh path:plugins/kubectl"
        } > "${ZDOTDIR}/.zsh_plugins.txt"
        echo "Created .zsh_plugins.txt successfully"
      fi

      # Make scripts executable
      chmod +x setup.sh
      chmod +x verify_setup.sh

# Template for running setup
.setup_template: &setup_template
  setup_script:
    - |
      # Run the setup script
      zsh ./setup.sh 2>&1 | tee /tmp/cirrus-build.log

# Template for running verification
.verify_template: &verify_template
  verify_script:
    - |
      # Run verification script
      source ~/.zshrc
      ./verify_setup.sh 2>&1 | tee verify.log

# Template for artifact collection
.artifacts_template: &artifacts_template
  always:
    build_log_artifacts:
      path: "/tmp/cirrus-build.log"
      type: text/plain
    zshrc_artifacts:
      path: "~/.zshrc"
      type: text/plain
    plugins_artifacts:
      path: "~/.zsh_plugins.txt"
      type: text/plain
    verify_log_artifacts:
      path: "verify.log"
      type: text/plain

# Daily scheduled validation build
daily_validation_task:
  name: daily_compatibility_check
  trigger_type: scheduled
  cron: "0 0 * * *"  # Run at midnight UTC every day

  # Include all configurations using templates
  <<: [*macos_instance_template, *clone_template,
       *install_homebrew_template, *prepare_environment_template,
       *setup_template, *verify_template, *artifacts_template]

# Task for testing the setup script on macOS ARM (on-demand)
macos_arm_test_task:
  name: macos_arm_test

  # Include common configurations using templates
  <<: [*macos_instance_template, *clone_template,
       *install_homebrew_template, *prepare_environment_template,
       *setup_template, *verify_template, *artifacts_template]
