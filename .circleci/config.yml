version: 2.1

# Define reusable commands
commands:
  install_homebrew:
    description: "Install Homebrew if not present"
    steps:
      - run:
          name: Install Homebrew
          shell: /bin/zsh
          command: |
            # Check if brew is already available
            if command -v brew &>/dev/null; then
                echo "Homebrew is already installed"
                which brew
                brew --version
            else
                echo "Installing Homebrew..."
                /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            fi
            
            # Set up Homebrew environment for the current session
            if [[ "$(uname -m)" == "arm64" ]]; then
                eval "$(/opt/homebrew/bin/brew shellenv)"
            else
                eval "$(/usr/local/bin/brew shellenv)"
            fi
            
            # Verify brew is working
            echo "Verifying Homebrew installation..."
            which brew
            brew --version

  ensure_homebrew_bundle:
    description: "Ensure homebrew-bundle is installed"
    steps:
      - run:
          name: Install homebrew-bundle if needed
          shell: /bin/zsh
          command: |
            # Set up Homebrew environment
            if [[ "$(uname -m)" == "arm64" ]]; then
                eval "$(/opt/homebrew/bin/brew shellenv)"
            else
                eval "$(/usr/local/bin/brew shellenv)"
            fi
            
            chmod +x .circleci/install_bundle.sh
            ./.circleci/install_bundle.sh

  prepare_environment:
    description: "Prepare the CI environment"
    steps:
      - run:
          name: Install required tools and setup environment
          shell: /bin/zsh
          command: |
            # Set up Homebrew environment
            if [[ "$(uname -m)" == "arm64" ]]; then
                eval "$(/opt/homebrew/bin/brew shellenv)"
            else
                eval "$(/usr/local/bin/brew shellenv)"
            fi
            
            # Install required tools
            brew install shellcheck
            
            # Set up environment variables consistently
            export ZDOTDIR="${HOME}"
            export ANTIDOTE_HOME="${HOME}/.antidote"
            
            # Create necessary directories first
            mkdir -p "${ZDOTDIR}"
            mkdir -p "${ANTIDOTE_HOME}"
            
            # Create .zsh_plugins.txt in the correct location
            if [[ ! -f "${ZDOTDIR}/.zsh_plugins.txt" ]]; then
                echo "Creating .zsh_plugins.txt in ${ZDOTDIR}"
                cat > "${ZDOTDIR}/.zsh_plugins.txt" \<< 'PLUGINS_EOF'
            # Core functionality
            zsh-users/zsh-completions
            zsh-users/zsh-autosuggestions
            zsh-users/zsh-syntax-highlighting

            # Git integration
            ohmyzsh/ohmyzsh path:plugins/git

            # Kubernetes tools
            ohmyzsh/ohmyzsh path:plugins/kubectl
            PLUGINS_EOF
                echo "Created .zsh_plugins.txt successfully"
            fi
            
            # Verify the file exists and show its location
            echo "Checking for .zsh_plugins.txt..."
            ls -la "${ZDOTDIR}/.zsh_plugins.txt" || echo "File not found!"
            
            # Generate and modify CI setup script
            chmod +x ci_modifiers.sh
            zsh ./ci_modifiers.sh
            chmod +x ci_setup.sh
            chmod +x verify_setup.sh

  run_setup:
    description: "Run the setup script"
    steps:
      - run:
          name: Run setup script
          shell: /bin/zsh
          command: |
            # Set up Homebrew environment
            if [[ "$(uname -m)" == "arm64" ]]; then
                eval "$(/opt/homebrew/bin/brew shellenv)"
            else
                eval "$(/usr/local/bin/brew shellenv)"
            fi
            
            export COMPLETION_DIR="${HOME}/.zsh/completions"
            export ZCOMPCACHE="${HOME}/.zcompcache"
            export ZCOMPDUMP="${ZCOMPCACHE}/zcompdump"
            export ANTIDOTE_HOME="${HOME}/.antidote"
            export ZDOTDIR="${HOME}"
            
            # Verify plugins file exists before setup
            echo "Before setup - checking for plugins file:"
            ls -la "${ZDOTDIR}/.zsh_plugins.txt" || echo "Plugins file missing before setup!"
            
            mkdir -p "${COMPLETION_DIR}"
            mkdir -p "${ZCOMPCACHE}"
            zsh ./ci_setup.sh

  run_verification:
    description: "Run the verification script"
    steps:
      - run:
          name: Run verification script
          shell: /bin/zsh
          command: |
            # Set up Homebrew environment
            if [[ "$(uname -m)" == "arm64" ]]; then
                eval "$(/opt/homebrew/bin/brew shellenv)"
            else
                eval "$(/usr/local/bin/brew shellenv)"
            fi
            
            # Set up environment variables in zsh context
            export COMPLETION_DIR="${HOME}/.zsh/completions"
            export ZCOMPCACHE="${HOME}/.zcompcache"
            export ZCOMPDUMP="${ZCOMPCACHE}/zcompdump"
            export ANTIDOTE_HOME="${HOME}/.antidote"
            export ZDOTDIR="${HOME}"
            
            # Verify plugins file exists before verification
            echo "Before verification - checking for plugins file:"
            ls -la "${ZDOTDIR}/.zsh_plugins.txt" || echo "Plugins file missing before verification!"
            cat "${ZDOTDIR}/.zsh_plugins.txt" || echo "Cannot read plugins file!"
            
            # Create necessary directories
            mkdir -p "${COMPLETION_DIR}"
            mkdir -p "${ZCOMPCACHE}"
            
            # Initialize zsh completion system (zsh-specific commands)
            autoload -Uz compinit
            compinit -d "${ZCOMPDUMP}"
            fpath=("${COMPLETION_DIR}" $fpath)
            
            # Load antidote if available
            if [[ -e "$(brew --prefix)/opt/antidote/share/antidote/antidote.zsh" ]]; then
                source "$(brew --prefix)/opt/antidote/share/antidote/antidote.zsh"
                antidote load "${ZDOTDIR}/.zsh_plugins.txt"
            fi
            
            # Source zshrc - don't fail if this doesn't work in CI
            source "${ZDOTDIR}/.zshrc" || echo "Warning: Failed to source ${ZDOTDIR}/.zshrc (this may be expected in CI)"
            
            # Run verification script directly - let it handle its own output and exit code
            ./verify_setup.sh

# Define the main workflow
workflows:
  version: 2
  build_and_test:
    jobs:
      - macos_test

# Define the macOS test job
jobs:
  macos_test:
    macos:
      xcode: "14.3.0"  # Specify the Xcode version
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
      HOMEBREW_NO_INSTALL_CLEANUP: 1
      HOMEBREW_NO_ENV_HINTS: 1
      CI: true
      NONINTERACTIVE: 1
      PATH: /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$PATH
      SHELL: /bin/zsh
      ZDOTDIR: $HOME
    steps:
      - checkout
      - install_homebrew
      - ensure_homebrew_bundle
      - prepare_environment
      - run_setup
      - run_verification
      - store_artifacts:
          path: ~/.zshrc
          destination: zshrc
      - store_artifacts:
          path: ~/.zsh_plugins.txt
          destination: zsh_plugins
      - store_artifacts:
          path: /tmp/circleci-build.log
          destination: build_log